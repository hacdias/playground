#! /usr/bin/env node
process.bin = process.title = 'sitify';

var application = require('commander'),
    backup = require('../lib/backup'),
    hosts = require('../lib/hosts'),
    website = require('../lib/website'),
    config = require('../lib/config'),
    welcome = require('../lib/helpers/welcome');

function actionOfNewDelete(action, opts, projectName, context) {
    welcome[action + 'Thing']();

    if (opts['entry'] === true && opts['website'] === true) {
        context.outputHelp();
    } else if (opts['entry'] === true) {
        hosts().make(action, projectName);
    } else if (opts['website'] === true) {
        website().make(action, projectName);
    } else {
        context.outputHelp();
    }
}

application
    .version('0.0.1');

application
    .command('backup')
    .description('Backup your hosts file')
    .action(function () {
        welcome.backup();
        backup();
    });

application
    .command('config')
    .description('Sitify configuration')
    .option('-c, --change', 'Change the configuration')
    .option('-s, --show', 'Show the configuration (default)')
    .action(function () {
        welcome.config();

        if (this.opts()['change']) {
            config().change();
        } else {
            config().show();
        }
    });

application
    .command('hosts')
    .description('Manage your hosts file')
    .option('-c, --clean', 'Clean the hosts file doing a rearrange')
    .option('-s, --show', 'Sho the hosts file content (default)')
    .option('-w, --wipe', 'Wipe the hosts file content')
    .action(function () {
        welcome.hosts();

        if (this.opts()['clean']) {
            hosts().clean();
        } else if (this.opts()['wipe']) {
            hosts().wipe();
        } else {
            hosts().show();
        }

    });

application
    .command('new <name>')
    .description('Create a new website or hosts entry')
    .option('-e, --entry', 'To create a new hosts entry')
    .option('-w, --website', 'To create a new website')
    .action(function (projectName) {
        actionOfNewDelete('add', this.opts(), projectName, this);
    });

application
    .command('rem <name>')
    .description('Remove a website or hosts entry')
    .option('-e, --entry', 'To delete an hosts entry')
    .option('-w, --website', 'To delete a website')
    .action(function (projectName) {
        actionOfNewDelete('remove', this.opts(), projectName, this);
    });

application
    .command('*')
    .description('Show help')
    .action(function () {
        application.help();
    });

application.parse(process.argv);

if (process.argv.length === 2) {
    application.help();
}
